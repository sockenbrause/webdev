naming: camelcase
objects end with Capital O
strings	end with Capital S
Numbers	end with Capital N
Arrays end with Capital A
Booleans end with Capital B

clean your code 

algorythm

-the idea:
create a program that takes "dirty" html code with lines of style attributes 
and devide it into two textfiles, one with the html code and one with 
the css code. the user shall be able to decide, if certain css code shall be 
created as a class or with tag-links.

an extended version will also separate scripts into a javascriptfile
and can load and save files.
-the algorythm

create a prompt that can take the copied html code as a pasted string.

check the code line by line for the keyword style=
string.indexOf(searchstring, startposition) gives back the first appearence of the searched string.
store the index in an array of objects (styleCarrierO). 
styleCarrierO[n]={
htmlTextIndex: (the index inside the whole HTML text),
tagLineS: (the whole line from tag to endtag),
styleStringA : (an Array of the different css commands inside the style attribute),
similaritiesA: (an Array of indices of other commandlines that have got similar style attributes),
}

if you find a tagline with the keyword 'style=', fill the properties of the styleCarrierO except similaritiesA   
repeat with the new startposition that is index+5, until the  end of the string is reached.
(do while?)

for loop end array
compare stylecarrier

to be continued...
